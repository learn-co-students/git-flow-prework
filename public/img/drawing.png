OBJECTIVES
Get familiar with git syntax
Get comfortable creating, merging, pushing, and pulling branches
Resolve merge conflicts
INSTRUCTIONS
Remember to fork and clone this lab if you haven't already.

BACKGROUND
For this lab, you're going to be pretending that you work for National Geographic's Photography contest and that your assignment is to make a quick mockup of what the home page will look like. You want to include photos from the past five winners on the page.

BRANCHING
Before altering your code base, open index.html in the browser. In the first part of this lab, you're going to add a photo of a turtle below the image of the tree to a branch then merge that branch into master.

Type git branch. This should show you that you're on the master branch.
Make a new branch called add-turtle from the master branch: git branch add-turtle
Type git branch again. Now you should see master (highlighted) and add-turtle
Switch to the add-turtle branch: git checkout add-turtle
Make sure you switched successfully by typing git branch again. This should return master and add-turtle (highlighted).
In index.html, below the tree picture and caption section, add the turtle picture using the HTML below:
<!-- begin turtle picture and caption -->
<div class="center-container">
  <div class="card">
    <div class="caption">
      <h4>From the Sky</h4>
      <p>Montse Grillo</p>
      <p>Tenerife, Canary Islands</p>
    </div>
  </div>
  <div class="card">
    <img src="public/img/turtle.jpg" alt="sea turtle swimming">
  </div>
</div>
<!-- end turtle picture and caption -->
Open up your index.html and see how the page looks.
Stage and commit your changes.
MERGING
Now that you've sucessfully added a turtle pic and caption to the add-turtle branch and staged and commited it, you're going to merge that branch into master.

The first step is to switch back to the master branch: git checkout master
Now you're going to merge the add-turtle branch in: git merge add-turtle
Open up your index.html in the browser. How does it look? Does it have two pictures now?
While you have this change locally, your remote repo (the one up on Github) still thinks that index.html just has one picture, the tree/bird one. You need to tell it about this update.

Push the update to your master branch on your remote repo: git push origin master
To make sure this push worked, visit your fork of this repo. From there, you can double check in at least two ways:

There will be a light blue bar above the file struture of the repo: blue bar that displays the most recent commit. This bar should have your GitHub picture followed by your GitHub name and a time stamp.
Click on num of commits. The most recent commit, the one at the top, should be the one you made.
Let's get local again: How many branches do you expect to see when you type git branch? How many are there? What does this tell you about merging?

DELETING A LOCAL BRANCH
Now that you've added the changes you've made from add-turtle to master, and master has been pushed to the remote repo successfully, it's time to delete your local version of add-turtle.

Make sure you're on master: git branch should return master highlighted.
Type git branch -d add-turtle
To make sure this branch was sucessfully deleted, type git branch. You should only see master now.
CREATING A MERGE CONFLICT
WALRUS BRANCH
From master, make a new branch, add-walrus. On this branch, you're going to add the below code to index.html, under the tree and turtle pictures.

<!-- begin walrus picture and caption -->
<div class="center-container">
  <div class="card">
    <div class="caption">
      <h4>Hello</h4>
      <p>Misty Gage</p>
      <p>Point Defiance Zoo, Tacoma, WA</p>
    </div>
  </div>
  <div class="card">
    <img src="public/img/walrus.jpg" alt="walrus swimming with bubbles">
  </div>
</div>
<!-- end walrus picture and caption -->
Remember to add and commit these changes.

POLAR BEAR AND WALRUS BRANCH
From the add-walrus branch, switch to master. From master, make a new branch, add-walrus-and-polar-bear. On this branch, you're going to add the below code to index.html, under the tree and turtle pictures (the same location where you added the walrus photo).

<!-- begin polar bear picture and caption -->
<div class="center-container">
  <div class="card">
    <img src="public/img/polar-bear.jpg" alt="polar bear on ice">
  </div>
  <div class="card">
    <div class="caption">
      <h4>Arctic Hi Five</h4>
      <p>Colin Mackenzie</p>
      <p>Svalbard, northern Norway</p>
    </div>
  </div>
</div>
<!-- end polar bear picture and caption -->
Remember to add and commit these changes as well.

MERGING WITH CONFLICTS
From the add-walrus-and-polar-bear branch, merge the add-walrus branch: git merge add-walrus
You'll probably see a message that looks like "Automatic merge failed; fix conflicts and then commit the result." This just means that you will have to open the files where there are merge conflicts, in this case index.html, and find the part that looks like:
<<<<<<< HEAD
HTML for polar bear
=======
HTML for walrus
>>>>>>> add-walrus
Just decide which part of the markup you'd like to preserve: the first part from add-walrus-and-polar-bear, the second part from add-walrus, or both. Then delete the <<<<HEAD, ======, and >>>>> parts.

Fix the merge conflict in index.html so that index now has four photos: tree, turtle, walrus, and polar bear.

Remember, if you have multiple files with merge conflicts, you'll have to repeat this process with each file. Once you're done selecting which code to retain, git add and git commit these changes. Now when you type git status, your terminal should not display "You have unmerged paths."

PUSHING A LOCAL BRANCH
Now you're going to create a add-walrus-and-polar-bear branch on your remote repo.

From the branch add-walrus-and-polar-bear, push the code to a remote branch of the same title. You can do this in one line with: git push origin add-walrus-and-polar-bear.
To ensure this push worked, head over to GitHub and view your forked repo. Click on the branch dropdown: branch dropdown, there should be the option to view the add-walrus-and-polar-bear branch.
Now your master branch has a tree and a turtle while add-walrus-and-polar-bear has tree, walrus, and polar bear.
Since you merged add-walrus into add-walrus-and-polar-bear, go ahead and delete it. Remember that you cannot "be" on the branch that you're trying to delete so make sure you're on add-walrus-and-polar-bear instead.
GETTING A REMOTE BRANCH
Many times when working in groups, a developer will branch off of master, add some code, then push this new branch to the remote repo for another developer to work on.

Since you're working on this project alone, you're going to mimic the remote creation of a new branch. For the next section, you're going to pretend to be a team member, Lauren. Lauren likes to add emoticons to readmes.

LAUREN TIME